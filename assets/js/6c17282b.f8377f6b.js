"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[664],{93870:function(e){e.exports=JSON.parse('{"functions":[{"name":"Validator","desc":"We can define a `Validator` function to run our field value by when we run the plug. If there is an issue, we have `Validator`\\nreturn a `string` detailing the issue. If everything is OK, return nil.\\n\\nA good use case is if the user can define a number, but we want to make sure it is non-negative.\\n```\\n{\\n    Name = \\"Height\\";\\n    PlugFieldType = \\"number\\";\\n    Validator = function(someNumber)\\n        if someNumber < 0 then\\n            return (\\"Must be non-negative. Got: %d\\"):format(someNumber)\\n        end\\n    end\\n}\\n```","params":[{"name":"value","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"string"}],"function_type":"static","source":{"line":48,"path":"docs_api/sub_definitions.lua"}}],"properties":[{"name":"Type","desc":"","lua_type":"PlugFieldType","tags":["Required"],"source":{"line":10,"path":"docs_api/sub_definitions.lua"}},{"name":"Name","desc":"The name of this field. This is the same string used to reference this field within a plug.","lua_type":"string","tags":["Required"],"source":{"line":18,"path":"docs_api/sub_definitions.lua"}},{"name":"IsRequired","desc":"If true, the plug will not run + produce a `PlugWarn` in the output if a value has not been defined.","lua_type":"boolean","source":{"line":25,"path":"docs_api/sub_definitions.lua"}}],"types":[],"name":"PlugField","desc":"","source":{"line":4,"path":"docs_api/sub_definitions.lua"}}')}}]);