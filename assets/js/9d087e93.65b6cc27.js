"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[591],{54123:e=>{e.exports=JSON.parse('{"functions":[{"name":"RaycastMouse","desc":"Sends a raycast from our camera to the point our mouse is at in the world.\\n\\n`checkAllCollisionGroups=true` will make sure we raycast against parts that don\'t collide with the `\\"Default\\"` Collision Group (see the \\".Locked\\" macro)","params":[{"name":"distance","desc":"","lua_type":"number"},{"name":"raycastParams","desc":"","lua_type":"RaycastParams|nil"},{"name":"checkAllCollisionGroups","desc":"","lua_type":"boolean|nil"}],"returns":[],"function_type":"method","source":{"line":78,"path":"docs_api/utils.lua"}},{"name":"Raycast","desc":"Does a bog standard raycast.\\n\\n`checkAllCollisionGroups=true` will make sure we raycast against parts that don\'t collide with the `\\"Default\\"` Collision Group (see the \\".Locked\\" macro)","params":[{"name":"origin","desc":"","lua_type":"Vector3"},{"name":"direction","desc":"","lua_type":"Vector3"},{"name":"distance","desc":"","lua_type":"number"},{"name":"raycastParams","desc":"","lua_type":"RaycastParams|nil"},{"name":"checkAllCollisionGroups","desc":"","lua_type":"boolean|nil"}],"returns":[],"function_type":"method","source":{"line":92,"path":"docs_api/utils.lua"}}],"properties":[],"types":[],"name":"RaycastUtil","desc":"Gives some nice methods for raycasting. ","source":{"line":66,"path":"docs_api/utils.lua"}}')}}]);