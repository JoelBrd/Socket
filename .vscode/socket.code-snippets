{
    "Socket Script": {
        "prefix": "socket script",
        "body": [
            "--!strict",
            "",
            "---",
            "--TODO description",
            "---",
            "---@class ${0:$TM_FILENAME_BASE}",
            "---",
            "local ${0:$TM_FILENAME_BASE} = {}",
            "",
            "--------------------------------------------------",
            "-- Dependencies",
            "local Framework = require(script:FindFirstAncestor(\"Framework\")) ---@type Framework",
            "-- ...",
            "",
            "--------------------------------------------------",
            "-- Types",
            "-- ...",
            "",
            "--------------------------------------------------",
            "-- Constants",
            "-- ...",
            "",
            "--------------------------------------------------",
            "-- Members",
            "-- ...",
            "",
            "---",
            "---@private",
            "---",
            "---Asynchronously called with all other FrameworkInit()",
            "---",
            "function ${0:$TM_FILENAME_BASE}:FrameworkInit()",
            "    -- TODO Logic here",
            "end",
            "",
            "---",
            "---@private",
            "---",
            "---Synchronously called, one after the other, with all other FrameworkStart()",
            "---",
            "function ${0:$TM_FILENAME_BASE}:FrameworkStart()",
            "    -- TODO Logic here",
            "end",
            "",
            "return ${0:$TM_FILENAME_BASE}",
            ""
        ],
        "description": "File template for a Socket Script"
    },
    "Socket Dependency": {
        "prefix": "socket dependency",
        "body": [
            "local ${0:dependency} ---@type ${0:dependency}",
            "${0:dependency} = Framework:Require(\"${0:dependency}\")"
        ],
        "description": "File template for a Socket Script"
    },
    "Socket Roact Component": {
        "prefix": "socket roact component",
        "body": [
            "--!strict",
            "",
            "---",
            "--TODO description",
            "---",
            "---@class ${0:$TM_FILENAME_BASE}",
            "---",
            "local ${0:$TM_FILENAME_BASE} = {}",
            "",
            "--------------------------------------------------",
            "-- Dependencies",
            "local Framework = require(script:FindFirstAncestor(\"Framework\")) ---@type Framework",
            "local Logger ---@type Logger",
            "local Roact ---@type Roact",
            "-- ...",
            "",
            "--------------------------------------------------",
            "-- Types",
            "",
            "--------------------------------------------------",
            "-- Constants",
            "-- ...",
            "",
            "--------------------------------------------------",
            "-- Members",
            "local component ---@type ${0:$TM_FILENAME_BASE}Component",
            "",
            "---",
            "---@private",
            "---",
            "function ${0:$TM_FILENAME_BASE}:InitComponent()",
            "    ---@class ${0:$TM_FILENAME_BASE}Component",
            "    local ${0:$TM_FILENAME_BASE}Component = Roact.Component:extend(\"${0:$TM_FILENAME_BASE}Component\")",
            "",
            "    ${0:$TM_FILENAME_BASE}Component.defaultProps = {}",
            "",
            "    function ${0:$TM_FILENAME_BASE}Component:init()",
            "        self:setState({})",
            "    end",
            "",
            "    function ${0:$TM_FILENAME_BASE}Component:render()",
            "        local state = self.state",
            "        local props = self.props",
            "",
            "        --TODO Paste snippet here",
            "    end",
            "",
            "    component = ${0:$TM_FILENAME_BASE}Component",
            "end",
            "",
            "---",
            "---@return ${0:$TM_FILENAME_BASE}Component",
            "---",
            "function ${0:$TM_FILENAME_BASE}:GetComponent()",
            "    -- Load component",
            "    if not component then",
            "        self:InitComponent()",
            "    end",
            "    return component",
            "end",
            "",
            "---",
            "---@private",
            "---",
            "---Asynchronously called with all other FrameworkInit()",
            "---",
            "function ${0:$TM_FILENAME_BASE}:FrameworkInit()",
            "    Roact = Framework:Require(\"Roact\")",
            "    Logger = Framework:Require(\"Logger\")",
            "",
            "    -- TODO Logic here",
            "end",
            "",
            "---",
            "---@private",
            "---",
            "---Synchronously called, one after the other, with all other FrameworkStart()",
            "---",
            "function ${0:$TM_FILENAME_BASE}:FrameworkStart()",
            "    -- TODO Logic here",
            "end",
            "",
            "return ${0:$TM_FILENAME_BASE}",
            ""
        ],
        "description": "Socket template for creating a Roact component"
    }
}